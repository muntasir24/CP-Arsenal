
// 1. Compare strings without case sensitivity
    string s1 = "Moon", s2 = "moon";
    if (strcasecmp(s1.c_str(), s2.c_str()) == 0)
        cout << "Strings are equal (case insensitive)\n"; 
    // Output: Strings are equal (case insensitive)
_______________________________________________________________________________________________________________________________________________________________________________________________
    // 2. Compare strings with case sensitivity
    if (s1.compare(s2) == 0)
        cout << "Strings are equal (case sensitive)\n";
    else
        cout << "Strings are not equal (case sensitive)\n";
    // Output: Strings are not equal (case sensitive)
_______________________________________________________________________________________________________________________________________________________________________________________________
    // 3. Remove 1 character from position 0
    string s3 = "moon";
    s3.erase(0, 1);
    cout << s3 << endl;  // Output: oon
_______________________________________________________________________________________________________________________________________________________________________________________________
    // 4. Convert string to lowercase
    string s4 = "BAC";
    transform(s4.begin(), s4.end(), s4.begin(), ::tolower);
    cout << s4 << endl;  // Output: bac
_______________________________________________________________________________________________________________________________________________________________________________________________
    // 5. Reverse a string
    string s5 = "BAC";
    reverse(s5.begin(), s5.end());
    cout << s5 << endl;  // Output: CAB
_______________________________________________________________________________________________________________________________________________________________________________________________
    // 6. Sort a string
    string s6 = "bac";
    sort(s6.begin(), s6.end());
    cout << s6 << endl;  // Output: abc
_______________________________________________________________________________________________________________________________________________________________________________________________
    // 7. Check if a substring exists
    string s7 = "moon", s8 = "oo";
    if (s7.find(s8) != string::npos)
        cout << "YES\n";
    // Output: YES
_______________________________________________________________________________________________________________________________________________________________________________________________
    // 8. Convert a char to a number
    char ch = '3';
    int num = ch - '0';
    cout << num << endl;  // Output: 3

// Convert a number to a character
    int num = 3;
    char ch = num + '0';
    cout << ch << endl;  // Output: 3
_______________________________________________________________________________________________________________________________________________________________________________________________
    // 9.  Convert a number to a string
    int n = 123;
    string s10 = to_string(n);
    cout << s10 << endl;  // Output: 123
_______________________________________________________________________________________________________________________________________________________________________________________________
    // 10. Remove duplicate consecutive characters
    string s9 = "moon";
    s9.erase(unique(s9.begin(), s9.end()), s9.end());
    cout << s9 << endl;  // Output: mon
_______________________________________________________________________________________________________________________________________________________________________________________________
    // 11. Count occurrences of a character in a string
    string s11 = "moon";
    int cur = count(s11.begin(), s11.end(), 'o');
    cout << cur << endl;  // Output: 2
_______________________________________________________________________________________________________________________________________________________________________________________________
    // 12. Output alphabet characters
    for (int i = 0; i < 26; ++i)
        cout << char('a' + i);  
    cout << endl;  // Output: abcdefghijklmnopqrstuvwxyz
    cout << char('A' + 0) << endl;  // Output: A
    cout << char('a' + 0) << endl;  // Output: a
_______________________________________________________________________________________________________________________________________________________________________________________________
    // 13. Get a substring
    string s12 = "muntasir";
    cout << s12.substr(5, 2) << endl;  // Output: si
_______________________________________________________________________________________________________________________________________________________________________________________________
    // 14. Pop the last character
    string s13 = "muntasir;";
    s13.pop_back();
    cout << s13 << endl;  // Output: muntasir
_______________________________________________________________________________________________________________________________________________________________________________________________
    // 15. Find the first and last occurrences of substrings
    string s14;
    cin >> s14;
    int i = s14.find("11");
    int j = s14.rfind("00");
    cout << (i != -1 && j != -1 && i < j ? "NO" : "YES") << endl;
    // Example input/output: Input: 11001, Output: NO
    //                       Input: 10011, Output: YES
______________________________________________________________________________________________________________________________________________________________________________________________
16.
 for (int i = 0; i <26; ++i)
  {
  	cout<<char('a'+i)<<endl;
  }
//a to j
______________________________________________________________________________________________________________________________________________________________________________________________
17.
 string s = "a";
    // Increment the first character of the string
    cout << s[0] + 1 << endl;
    cout << "Incremented string: " << s << endl;
//output : b

